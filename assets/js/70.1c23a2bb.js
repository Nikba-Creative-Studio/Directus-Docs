(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{401:function(e,t,s){"use strict";s.r(t);var a=s(14),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"sorting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sorting"}},[e._v("#")]),e._v(" Sorting")]),e._v(" "),t("p",[t("code",[e._v("sort")]),e._v(" is a CSV of fields used to sort the fetched items. Sorting defaults to ascending (ASC) order but a minus sign ("),t("code",[e._v("-")]),e._v(") can be used to reverse this to descending (DESC) order. Fields are prioritized by their order in the CSV. You can also use a "),t("code",[e._v("?")]),e._v(" to sort randomly.")]),e._v(" "),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# Sorts randomly\n?sort=?\n\n# Sorts by name ASC\n?sort=name\n\n# Sorts by name ASC, followed by age DESC\n?&sort=name,-age\n\n# Sorts by name ASC, followed by age DESC, followed by random sorting\n?sort=name,-age,?\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);