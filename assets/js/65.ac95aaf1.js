(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{396:function(t,e,a){"use strict";a.r(e);var o=a(14),n=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"metadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#metadata"}},[t._v("#")]),t._v(" Metadata")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("meta")]),t._v(" parameter is a CSV of metadata fields to include. This parameter supports the wildcard ("),e("code",[t._v("*")]),t._v(") to return all metadata fields.")]),t._v(" "),e("h2",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("collection")]),t._v(" - The name of the collection")]),t._v(" "),e("li",[e("code",[t._v("type")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("collection")]),t._v(" If it is a collection of items")]),t._v(" "),e("li",[e("code",[t._v("item")]),t._v(" If it is a single item")])])]),t._v(" "),e("li",[e("code",[t._v("result_count")]),t._v(" - Number of items returned in this response")]),t._v(" "),e("li",[e("code",[t._v("total_count")]),t._v(" - Total number of items in this collection")]),t._v(" "),e("li",[e("code",[t._v("status_count")]),t._v(" - Number of items per status")]),t._v(" "),e("li",[e("code",[t._v("filter_count")]),t._v(" - Number of items matching the filter query")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('# Here is an example of all meta data enabled\n{\n    "collection":"movies",\n    "type":"collection",\n    "result_count":20,\n    "total_count":962,\n    "filter_count":120,\n    "status_count":{\n        "deleted":94,\n        "draft":90,\n        "coming soon":159,\n        "published":181\n    }\n}\n')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);